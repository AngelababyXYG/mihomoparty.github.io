<!DOCTYPE html>
<html class="no-js" lang="zh-CN">


<head>
        <link rel="canonical" href="https://mihomoparty.github.io/news/article-18949.htm" />
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <!-- Metas Page details-->
    <title>Go 互斥锁（sync.Mutex）和 读写锁（sync.RWMutex）</title>
        <meta name="description" content="Go 互斥锁（sync.Mutex）和 读写锁（sync.RWMutex）   什么时候需要用到锁？ 互斥锁（sync.Mutex） 读写锁（sync.RWMutex） 互斥锁和读写锁的性能对比   " />
        <link rel="icon" href="/assets/website/img/mihomoparty/favicon.ico" type="image/x-icon"/>
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--main style-->
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/bootstrap.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/main-style.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/css3-animations.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/responsive.css">
    <link type="text/css" rel="stylesheet" id="theme" href="/assets/website/css/mihomoparty/jquery-ui-1.8.16.custom.css">
    <link type="text/css" rel="stylesheet" href="/assets/website/css/mihomoparty/lightbox.min.css">
    <!-- Revolution slider css -->
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/settings.css">
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/revolution.css">
    <!-- Owl Carousel css -->
    <link href="/assets/website/css/mihomoparty/owl.carousel.css" rel="stylesheet">
    <link href="/assets/website/css/mihomoparty/owl.theme.css" rel="stylesheet">
    <link href="/assets/website/css/mihomoparty/owl.transitions.css" rel="stylesheet">
    <!-- font icon css style-->
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/font-awesome.css">
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/iconstyle.css">
    <!--google font style-->
    <link href='static/css/css.css' rel='stylesheet' type='text/css'>
    <!--font-family: Oswald;-->
    <link href='static/css/css1.css' rel='stylesheet' type='text/css'>
    <!--font-family: Open Sans, 'sans-serif';-->
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/panel.css">
    <!-- Style Switch -->
    <link rel="alternate stylesheet" type="text/css" media="screen" title="green" href="/assets/website/css/mihomoparty/color.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="lightblue" href="/assets/website/css/mihomoparty/color1.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="orange" href="/assets/website/css/mihomoparty/color2.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="yellow" href="/assets/website/css/mihomoparty/color3.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="red" href="/assets/website/css/mihomoparty/color4.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-5" href="/assets/website/css/mihomoparty/color5.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-6" href="/assets/website/css/mihomoparty/color6.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-7" href="/assets/website/css/mihomoparty/color7.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-8" href="/assets/website/css/mihomoparty/color8.css">
    <!-- Style Switch -->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-P3Y5HFGWW2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-P3Y5HFGWW2');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="top" class="ndhome" data-page="detail">
        <!-- PRELOADER-->
    <div id="preloader">
        <div class="preloader-container">
            <h4 class="preload-logo triggerAnimation animated" data-animate="fadeInLeft">NADEA</h4>
            <h4 class="back-logo">NADEA.</h4>
            <img src="/assets/website/img/mihomoparty/preloader.gif" class="preload-gif" alt="preload-image">
        </div>
    </div>
    <!-- END PRELOADER -->
    <!-- Header Section Start -->
    <header class="header headerStyle1" id="header">
        <div class="ndheader" id="ndheader">
            <div class="sticky scrollHeaderWrapper">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="logo pull-left">
                                <a class="navbar-brand" href="/">
                                                                        <span>Mihomo Party</span>
                                                                    </a>

                            </div>
                            <nav class="mainMenu mainNav pull-right" id="mainNav">
                                <ul class="navTabs">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul><!-- end of nav tabs -->
                            </nav><!-- end of main nav -->
                            <a href="#" class="generalLink" id="responsiveMainNavToggler"><i class="fa fa-bars"></i></a>
                            <div class="clearfix"></div><!-- end of clearfix -->
                            <div class="responsiveMainNav"></div><!-- end of responsive main nav -->
                        </div><!-- end fo col 12 -->
                    </div><!-- end of row -->
                </div><!-- end of container -->
            </div><!-- end of sticky -->
        </div><!-- end of ndheader -->
    </header><!-- end of header -->
    <!-- Nadea PageTitle Section Start -->
    <section id="page-title" class="clear skype-bg" style="padding-top: 15rem;">
        <div class="container">
            <div class="row">
                <div class="col-sm-4">
                    
                </div><!-- col 6-->
                <div class="col-sm-8">
                    <div class="ndbreadcrumb">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div><!-- col 6-->
            </div><!-- .row end -->
        </div><!-- .container end -->
    </section>
    <!-- Nadea PageTitle Section End -->
    <!-- Nadea Recent Work Start -->
    <section class="ndprotfolio clear" id="ndrecentwork">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <h1 style="font-size: 2.5rem;">Go 互斥锁（sync.Mutex）和 读写锁（sync.RWMutex）</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atelier-sulphurpool-light"> <div class="toc"> <h3>Go 互斥锁（sync.Mutex）和 读写锁（sync.RWMutex） </h3> <ul> <li><a href="#_3" rel="nofollow">什么时候需要用到锁？</a></li> <li><a href="#syncMutex_10" rel="nofollow">互斥锁（sync.Mutex）</a></li> <li><a href="#syncRWMutex_72" rel="nofollow">读写锁（sync.RWMutex）</a></li> <li><a href="#_115" rel="nofollow">互斥锁和读写锁的性能对比</a></li> <li> <ul> <li><a href="#1_118" rel="nofollow">1）使用互斥锁：</a></li> <li><a href="#2_175" rel="nofollow">2）使用读写锁</a></li> <li><a href="#_233" rel="nofollow">结论</a></li> </ul> </li> <li><a href="#_236" rel="nofollow">关于互斥锁的补充</a></li> <li><a href="#_254" rel="nofollow">关于读写锁的补充</a></li> </ul> </div> </h1> <p>当程序中就一个线程的时候，是不需要加锁的，但是通常实际的代码不会只是单线程，所以这个时候就需要用到锁了，那么关于锁的使用场景主要涉及到哪些呢？</p> <ul> <li>多个线程在读相同的数据时</li> <li>多个线程在写相同的数据时</li> <li>同一个资源，有读又有写</li> </ul> </h1> <p>互斥锁是一种常用的控制共享资源访问的方法，它能够保证同时只有一个 goroutine 可以访问到共享资源（同一个时刻只有一个线程能够拿到锁）</p> <p>先通过一个并发读写的例子演示一下，当多线程同时访问全局变量时，结果会怎样？</p> <pre><code class="prism language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token punctuation">)</span>   <span class="token keyword">var</span> count <span class="token builtin">int</span>   <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">{<!-- --></span>                 count <span class="token operator">++</span>             <span class="token punctuation">}</span>             fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>       fmt<span class="token punctuation">.</span><span class="token function">Scanf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>  <span class="token comment">//等待子线程全部结束</span> <span class="token punctuation">}</span>   运行结果： <span class="token number">980117</span> <span class="token number">1011352</span>  <span class="token comment">//最后的结果基本不可能是我们想看到的：200000</span> </code></pre> <p>修改代码，在累加的地方添加互斥锁，就能保证我们每次得到的结果都是想要的值</p> <pre><code class="prism language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span>     <span class="token string">"sync"</span> <span class="token punctuation">)</span>  <span class="token keyword">var</span> <span class="token punctuation">(</span>     count <span class="token builtin">int</span>     lock sync<span class="token punctuation">.</span>Mutex <span class="token punctuation">)</span>  <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">{<!-- --></span>                 lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 count <span class="token operator">++</span>                 lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token punctuation">}</span>             fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      fmt<span class="token punctuation">.</span><span class="token function">Scanf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>  <span class="token comment">//等待子线程全部结束</span> <span class="token punctuation">}</span>  运行结果： <span class="token number">1952533</span> <span class="token number">2000000</span>  <span class="token comment">//最后的线程打印输出</span> </code></pre> </h1> <p>在读多写少的环境中，可以优先使用读写互斥锁（sync.RWMutex），它比互斥锁更加高效。sync 包中的 RWMutex 提供了读写互斥锁的封装</p> <p>读写锁分为：读锁和写锁</p> <ul> <li>如果设置了一个写锁，那么其它读的线程以及写的线程都拿不到锁，这个时候，与互斥锁的功能相同</li> <li>如果设置了一个读锁，那么其它写的线程是拿不到锁的，但是其它读的线程是可以拿到锁</li> </ul> <p>通过设置写锁，同样可以实现数据的一致性：</p> <pre><code class="prism language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span>     <span class="token string">"sync"</span> <span class="token punctuation">)</span>   <span class="token keyword">var</span> <span class="token punctuation">(</span>     count <span class="token builtin">int</span>     rwLock sync<span class="token punctuation">.</span>RWMutex <span class="token punctuation">)</span>   <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">{<!-- --></span>                 rwLock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 count <span class="token operator">++</span>                 rwLock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token punctuation">}</span>             fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>       fmt<span class="token punctuation">.</span><span class="token function">Scanf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>  <span class="token comment">//等待子线程全部结束</span> <span class="token punctuation">}</span>   运行结果： <span class="token number">1968637</span> <span class="token number">2000000</span>  </code></pre> </h1> <p>demo：制作一个读多写少的例子，分别开启 3 个 goroutine 进行读和写，输出最终的读写次数</p> <h2> <a id="1_118" rel="nofollow"></a>1）使用互斥锁：</h2> <pre><code class="prism language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span>     <span class="token string">"fmt"</span>     <span class="token string">"sync"</span>     <span class="token string">"time"</span> <span class="token punctuation">)</span>   <span class="token keyword">var</span> <span class="token punctuation">(</span>     count  <span class="token builtin">int</span>     <span class="token comment">//互斥锁</span>     countGuard sync<span class="token punctuation">.</span>Mutex <span class="token punctuation">)</span>   <span class="token keyword">func</span> <span class="token function">read</span><span class="token punctuation">(</span>mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> <span class="token punctuation">{<!-- --></span>         countGuard<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token keyword">var</span> <span class="token boolean">_</span> <span class="token builtin">string</span> <span class="token operator">=</span> mapA<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>         count <span class="token operator">+=</span> <span class="token number">1</span>         countGuard<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   <span class="token keyword">func</span> <span class="token function">write</span><span class="token punctuation">(</span>mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> <span class="token punctuation">{<!-- --></span>         countGuard<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         mapA<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"johny"</span>         count <span class="token operator">+=</span> <span class="token number">1</span>         time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Millisecond <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>         countGuard<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>       <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">var</span> num <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">3</span>     <span class="token keyword">var</span> mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{<!-- --></span><span class="token string">"nema"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span>       <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token function">read</span><span class="token punctuation">(</span>mapA<span class="token punctuation">)</span>     <span class="token punctuation">}</span>       <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token function">write</span><span class="token punctuation">(</span>mapA<span class="token punctuation">)</span>     <span class="token punctuation">}</span>       time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>     fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"最终读写次数：%d\n"</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token punctuation">}</span>   运行结果： 最终读写次数：<span class="token number">3766</span>  </code></pre> <h2> <a id="2_175" rel="nofollow"></a>2）使用读写锁</h2> <pre><code class="prism language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span>     <span class="token string">"fmt"</span>     <span class="token string">"sync"</span>     <span class="token string">"time"</span> <span class="token punctuation">)</span>   <span class="token keyword">var</span> <span class="token punctuation">(</span>     count  <span class="token builtin">int</span>     <span class="token comment">//读写锁</span>     countGuard sync<span class="token punctuation">.</span>RWMutex <span class="token punctuation">)</span>   <span class="token keyword">func</span> <span class="token function">read</span><span class="token punctuation">(</span>mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> <span class="token punctuation">{<!-- --></span>         countGuard<span class="token punctuation">.</span><span class="token function">RLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//这里定义了一个读锁</span>         <span class="token keyword">var</span> <span class="token boolean">_</span> <span class="token builtin">string</span> <span class="token operator">=</span> mapA<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>         count <span class="token operator">+=</span> <span class="token number">1</span>         countGuard<span class="token punctuation">.</span><span class="token function">RUnlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   <span class="token keyword">func</span> <span class="token function">write</span><span class="token punctuation">(</span>mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">for</span> <span class="token punctuation">{<!-- --></span>         countGuard<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//这里定义了一个写锁</span>         mapA<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"johny"</span>         count <span class="token operator">+=</span> <span class="token number">1</span>         time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Millisecond <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>         countGuard<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>       <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">var</span> num <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">3</span>     <span class="token keyword">var</span> mapA <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{<!-- --></span><span class="token string">"nema"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span>       <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token function">read</span><span class="token punctuation">(</span>mapA<span class="token punctuation">)</span>     <span class="token punctuation">}</span>       <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">go</span> <span class="token function">write</span><span class="token punctuation">(</span>mapA<span class="token punctuation">)</span>     <span class="token punctuation">}</span>       time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>     fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"最终读写次数：%d\n"</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token punctuation">}</span>   运行结果： 最终读写次数：<span class="token number">8165</span>  </code></pre> <h2> <a id="_233" rel="nofollow"></a>结论</h2> <p>结果差距大概在 2 倍左右，读锁的效率要快很多！</p> </h1> <p>互斥锁需要注意的问题：</p> <ol> <li>不要重复锁定互斥锁</li> <li>不要忘记解锁互斥锁，必要时使用 defer 语句</li> <li>不要在多个函数之间直接传递互斥锁</li> </ol> <p>死锁： 当前程序中的主 goroutine 以及我们启用的那些 goroutine 都已经被阻塞，这些 goroutine 可以被称为用户级的 goroutine 这就相当于整个程序已经停滞不前了，并且这个时候 go 程序会抛出如下的 panic：</p> <pre><code class="prism language-go">fatal <span class="token builtin">error</span><span class="token punctuation">:</span> all goroutines are asleep <span class="token operator">-</span> deadlock<span class="token operator">!</span> </code></pre> <p>并且go语言运行时系统抛出自行抛出的panic都属于致命性错误，都是无法被恢复的，调用recover函数对他们起不到任何作用</p> <p>Go语言中的互斥锁是开箱即用的，也就是我们声明一个sync.Mutex 类型的变量，就可以直接使用它了，<strong>需要注意：该类型是一个结构体类型，属于值类型的一种，将它当做参数传给一个函数，将它从函数中返回，把它赋值给其他变量，让它进入某个管道，都会导致他的副本的产生。并且原值和副本以及多个副本之间是完全独立的，他们都是不同的互斥锁</strong>，所以不应该将锁通过函数的参数进行传递。</p> </h1> <ol> <li>在写锁已被锁定的情况下再次试图锁定写锁，会阻塞当前的goroutine</li> <li>在写锁已被锁定的情况下再次试图锁定读锁，也会阻塞当前的goroutine</li> <li>在读锁已被锁定的情况下试图锁定写锁，同样会阻塞当前的goroutine</li> <li>在读锁已被锁定的情况下再试图锁定读锁，并不会阻塞当前的goroutine</li> </ol> <p>对于某个受到读写锁保护的共享资源，多个写操作不能同时进行，写操作和读操作也不能同时进行，但多个读操作却可以同时进行</p> <p>对写锁进行解锁，会唤醒“所有因试图锁定读锁，而被阻塞的goroutine”, 并且这个通常会使他们都成功完成对读锁的锁定（这个还不理解）</p> <p>对读锁进行解锁，只会在没有其他读锁锁定的前提下，唤醒“因试图锁定写锁，而被阻塞的 goroutine” 并且只会有一个被唤醒的 goroutine 能够成功完成对写锁的锁定，其他的 goroutine 还要在原处继续等待，至于哪一个goroutine，那么就要看谁等待的事件最长</p> <p>解锁读写锁中未被锁定的写锁， 会立即引发panic ，对其中的读锁也是如此，并且同样是不可恢复的。</p> <p>原文链接：<br /> https://www.cnblogs.com/kaichenkai/p/11108303.html<br /> https://www.cnblogs.com/zhaof/p/8636384.html</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>下一个：<a href="/news/article-18950.htm">宠物食品加工厂的前景（宠物食品厂需要投资多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-6-free-subscribe-node.htm" title="Mihomo Party节点订阅每天更新22M/S免费节点订阅链接">Mihomo Party节点订阅每天更新22M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-24-free-subscribe-node.htm" title="Mihomo Party节点订阅每天更新22.9M/S免费节点订阅链接">Mihomo Party节点订阅每天更新22.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-4-free-subscribe-node.htm" title="Mihomo Party节点订阅每天更新20.6M/S免费节点订阅链接">Mihomo Party节点订阅每天更新20.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-18950.htm" title="宠物食品加工厂的前景（宠物食品厂需要投资多少钱）">宠物食品加工厂的前景（宠物食品厂需要投资多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-24415.htm" title="动物医院哪家好一些啊（动物医院哪家好一些啊知乎）">动物医院哪家好一些啊（动物医院哪家好一些啊知乎）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-high-speed-nodes.htm" title="Mihomo Party节点订阅每天更新22.3M/S免费节点订阅链接">Mihomo Party节点订阅每天更新22.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20338.htm" title="动物疫苗上市公司排名前十名有哪些 动物疫苗上市公司排名前十名有哪些牌子">动物疫苗上市公司排名前十名有哪些 动物疫苗上市公司排名前十名有哪些牌子</a></li>
                        <li class="py-2"><a href="/news/article-26343.htm" title="宠物医院好评文案100字 宠物店优质点评100字">宠物医院好评文案100字 宠物店优质点评100字</a></li>
                        <li class="py-2"><a href="/news/article-22163.htm" title="springboot 新建 AutoConfiguration">springboot 新建 AutoConfiguration</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-free-node-subscribe-links.htm" title="Mihomo Party节点订阅每天更新18.1M/S免费节点订阅链接">Mihomo Party节点订阅每天更新18.1M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div><!-- .row end -->
        </div><!-- .container end -->
    </section>
    <!--Recent Work End -->
        <!-- Footer Section Start -->
    <section class="footer-bg clear animation" data-animation="animation-fade-in-up" id="footer">
        <!-- Footer Bottom Start-->
        <div class="footer-bottom clear">
            <div class="container">
                <div class="row">
                    <div class="col-sm-6">
                        <ul class="footer-nav pull-left">
                            <li><a href="/">Home</a></li>
                            <li><a href="#">Features</a></li>
                            <li><a href="#">Portfolio</a></li>
                            <li><a href="#">Blog</a></li>
                            <li><a href="#">Contact</a></li>
                            <li><a href="#">Purchase</a></li>
                        </ul>
                    </div><!-- col 6 end -->
                    <div class="col-sm-6">
                        <p class="copywrite pull-right">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Mihomo Party免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div><!-- col 6 end -->
                </div><!-- row end -->
            </div><!-- container end -->
        </div><!-- Footer Bottom End -->
    </section><!-- footer section end  -->
    <div class="go-up"><img src="/assets/website/img/mihomoparty/back-top.png" alt="Back-To-Top"></div>
    <!-- Back To Top End-->
    <!-- Jquery lib-->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/bootstrap.js"></script>
    <!-- JavaScript -->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/owl.carousel.min.js"></script>
    <!--for portfolio jquery-->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.isotope.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/jquery.ui.widget.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/jquery.ui.rlightbox.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/jquery.themepunch.tools.min.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/jquery.themepunch.revolution.min.js"></script>
    <script type="text/javascript">
        $(function(){
            $('.banner').revolution({
            dottedOverlay: "none",
            delay: 9000,
            startwidth: 1500,
            startheight: 700,
            hideThumbs: 200,

            thumbWidth: 100,
            thumbHeight: 50,
            thumbAmount: 5,

            navigationType: "bullet",
            navigationArrows: "solo",
            navigationStyle: "preview3",


            navigationHAlign: "center", // Vertical Align top,center,bottom
            navigationVAlign: "bottom", // Horizontal Align left,center,right
            navigationHOffset: 0,
            navigationVOffset: 20,

            soloArrowLeftHalign: "left",
            soloArrowLeftValign: "center",
            soloArrowLeftHOffset: 20,
            soloArrowLeftVOffset: 0,

            soloArrowRightHalign: "right",
            soloArrowRightValign: "center",
            soloArrowRightHOffset: 20,
            soloArrowRightVOffset: 0,

            touchenabled: "off", // Enable Swipe Function : on/off
            onHoverStop: "off", // Stop Banner Timet at Hover on Slide on/off

            stopAtSlide: -1, // Stop Timer if Slide "x" has been Reached. If stopAfterLoops set to 0, then it stops already in the first Loop at slide X which defined. -1 means do not stop at any slide. stopAfterLoops has no sinn in this case.
            stopAfterLoops: -1, // Stop Timer if All slides has been played "x" times. IT will stop at THe slide which is defined via stopAtSlide:x, if set to -1 slide never stop automatic

            hideCaptionAtLimit: 0, // It Defines if a caption should be shown under a Screen Resolution ( Basod on The Width of Browser)
            hideAllCaptionAtLilmit: 0, // Hide all The Captions if Width of Browser is less then this value
            hideSliderAtLimit: 0, // Hide the whole slider, and stop also functions if Width of Browser is less than this value

            shadow: 0, //0 = no Shadow, 1,2,3 = 3 Different Art of Shadows  (No Shadow in Fullwidth Version !)
            fullWidth: "on" // Turns On or Off the Fullwidth Image Centering in FullWidth Modus


        });
        })
    </script>
    
    <!--Main Js -->
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/nice-scroll.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/ms-drop-down.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/easy-tabs.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/styleswitch.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>