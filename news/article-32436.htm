<!DOCTYPE html>
<html class="no-js" lang="zh-CN">


<head>
        <link rel="canonical" href="https://mihomoparty.github.io/news/article-32436.htm" />
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <!-- Metas Page details-->
    <title>SpringCloud Gateway详解与配置</title>
        <meta name="description" content="从0到1构建Gateway 手动构建 基本配置 Route组成 配置方式 &nbsp;1.yml文件配置 &nbsp;2.New Bean配置 常用的 Route Predicate Factory介" />
        <link rel="icon" href="/assets/website/img/mihomoparty/favicon.ico" type="image/x-icon"/>
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--main style-->
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/bootstrap.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/main-style.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/css3-animations.css">
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/responsive.css">
    <link type="text/css" rel="stylesheet" id="theme" href="/assets/website/css/mihomoparty/jquery-ui-1.8.16.custom.css">
    <link type="text/css" rel="stylesheet" href="/assets/website/css/mihomoparty/lightbox.min.css">
    <!-- Revolution slider css -->
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/settings.css">
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/revolution.css">
    <!-- Owl Carousel css -->
    <link href="/assets/website/css/mihomoparty/owl.carousel.css" rel="stylesheet">
    <link href="/assets/website/css/mihomoparty/owl.theme.css" rel="stylesheet">
    <link href="/assets/website/css/mihomoparty/owl.transitions.css" rel="stylesheet">
    <!-- font icon css style-->
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/font-awesome.css">
    <link rel="stylesheet" href="/assets/website/css/mihomoparty/iconstyle.css">
    <!--google font style-->
    <link href='static/css/css.css' rel='stylesheet' type='text/css'>
    <!--font-family: Oswald;-->
    <link href='static/css/css1.css' rel='stylesheet' type='text/css'>
    <!--font-family: Open Sans, 'sans-serif';-->
    <link rel="stylesheet" type="text/css" media="screen" href="/assets/website/css/mihomoparty/panel.css">
    <!-- Style Switch -->
    <link rel="alternate stylesheet" type="text/css" media="screen" title="green" href="/assets/website/css/mihomoparty/color.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="lightblue" href="/assets/website/css/mihomoparty/color1.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="orange" href="/assets/website/css/mihomoparty/color2.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="yellow" href="/assets/website/css/mihomoparty/color3.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="red" href="/assets/website/css/mihomoparty/color4.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-5" href="/assets/website/css/mihomoparty/color5.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-6" href="/assets/website/css/mihomoparty/color6.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-7" href="/assets/website/css/mihomoparty/color7.css">
    <link rel="alternate stylesheet" type="text/css" media="screen" title="color-8" href="/assets/website/css/mihomoparty/color8.css">
    <!-- Style Switch -->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-P3Y5HFGWW2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-P3Y5HFGWW2');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="top" class="ndhome" data-page="detail">
        <!-- PRELOADER-->
    <div id="preloader">
        <div class="preloader-container">
            <h4 class="preload-logo triggerAnimation animated" data-animate="fadeInLeft">NADEA</h4>
            <h4 class="back-logo">NADEA.</h4>
            <img src="/assets/website/img/mihomoparty/preloader.gif" class="preload-gif" alt="preload-image">
        </div>
    </div>
    <!-- END PRELOADER -->
    <!-- Header Section Start -->
    <header class="header headerStyle1" id="header">
        <div class="ndheader" id="ndheader">
            <div class="sticky scrollHeaderWrapper">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="logo pull-left">
                                <a class="navbar-brand" href="/">
                                                                        <span>Mihomo Party</span>
                                                                    </a>

                            </div>
                            <nav class="mainMenu mainNav pull-right" id="mainNav">
                                <ul class="navTabs">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul><!-- end of nav tabs -->
                            </nav><!-- end of main nav -->
                            <a href="#" class="generalLink" id="responsiveMainNavToggler"><i class="fa fa-bars"></i></a>
                            <div class="clearfix"></div><!-- end of clearfix -->
                            <div class="responsiveMainNav"></div><!-- end of responsive main nav -->
                        </div><!-- end fo col 12 -->
                    </div><!-- end of row -->
                </div><!-- end of container -->
            </div><!-- end of sticky -->
        </div><!-- end of ndheader -->
    </header><!-- end of header -->
    <!-- Nadea PageTitle Section Start -->
    <section id="page-title" class="clear skype-bg" style="padding-top: 15rem;">
        <div class="container">
            <div class="row">
                <div class="col-sm-4">
                    
                </div><!-- col 6-->
                <div class="col-sm-8">
                    <div class="ndbreadcrumb">
                        <ul class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div><!-- col 6-->
            </div><!-- .row end -->
        </div><!-- .container end -->
    </section>
    <!-- Nadea PageTitle Section End -->
    <!-- Nadea Recent Work Start -->
    <section class="ndprotfolio clear" id="ndrecentwork">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <h1 style="font-size: 2.5rem;">SpringCloud Gateway详解与配置</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><a href="#%E4%BB%8E0%E5%88%B01%E6%9E%84%E5%BB%BAGateway" rel="nofollow">从0到1构建Gateway</a></p> <p id="%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA-toc" style="margin-left:40px;"><a href="#%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA" rel="nofollow">手动构建</a></p> <p id="%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE-toc" style="margin-left:0px;"><a href="#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE" rel="nofollow">基本配置</a></p> <p id="Route%E7%BB%84%E6%88%90-toc" style="margin-left:40px;"><a href="#Route%E7%BB%84%E6%88%90" rel="nofollow">Route组成</a></p> <p id="%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-toc" style="margin-left:40px;"><a href="#%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F" rel="nofollow">配置方式</a></p> <p id="%C2%A0yml%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE-toc" style="margin-left:80px;"><a href="#%C2%A0yml%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE" rel="nofollow">&nbsp;1.yml文件配置</a></p> <p id="%C2%A0New%20Bean%E9%85%8D%E7%BD%AE-toc" style="margin-left:80px;"><a href="#%C2%A0New%20Bean%E9%85%8D%E7%BD%AE" rel="nofollow">&nbsp;2.New Bean配置</a></p> <p id="%E5%B8%B8%E7%94%A8%E7%9A%84%20Route%20Predicate%20Factory%E4%BB%8B%E7%BB%8D-toc" style="margin-left:40px;"><a href="#%E5%B8%B8%E7%94%A8%E7%9A%84%20Route%20Predicate%20Factory%E4%BB%8B%E7%BB%8D" rel="nofollow">常用的 Route Predicate Factory介绍</a></p> <hr id="hr-toc"/> </h1> <blockquote> <p>用来构建 API 网关。Spring Cloud Gateway 旨在提供一种简单而有效的方式来路由到 API，并为它们提供横切关注点，例如：安全性、监控/指标和弹性。</p> </blockquote> <hr/> </h1> <div> <ul> <li><span style="color:#0d0016;">动态路由：能够匹配任何请求属性的路由</span></li> <li><span style="color:#0d0016;">谓词和过滤器特定于路由</span></li> <li><span style="color:#0d0016;">熔断器集成</span></li> <li><span style="color:#0d0016;">易于编写谓词和过滤器</span></li> <li><span style="color:#0d0016;">集成SpringCloud的服务发现功能</span></li> <li><span style="color:#0d0016;">请求速率限制</span></li> <li><span style="color:#0d0016;">路径重写</span></li> </ul> <hr/> </h1> <h2 id="%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA">手动构建</h2> <p><strong>1.点击<a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://start.spring.io/#!type=maven-project&amp;language=java&amp;platformVersion=2.5.5&amp;packaging=jar&amp;jvmVersion=11&amp;groupId=com.example&amp;artifactId=gateway&amp;name=gateway&amp;description=Demo%20project%20for%20Spring%20Boot&amp;packageName=com.example.gateway&amp;dependencies=cloud-gateway,cloud-resilience4j,cloud-contract-stub-runner"  title="SpringGateway初始化" rel="nofollow">SpringGateway初始化</a>&nbsp;会显示如下页面，点击GENRATE下载配置好的压缩包。</strong></p> <blockquote> <p>请按需和实际场景选择 构建方式、语言、SpringBoot版本、打包方式和Java版本。</p> </blockquote> <p><img fetchpriority="high" decoding="async" alt="" height="970" src="http://img.555519.xyz/uploads3/20220828/5d1696fe873f35b9749aa7f6ec220d00.jpg"></p> <h3 id="%C2%A02.%E8%A7%A3%E5%8E%8B%E7%BC%A9%E4%B8%8B%E8%BD%BD%E5%A5%BD%E7%9A%84Gateway%E9%A1%B9%E7%9B%AE%E5%8E%8B%E7%BC%A9%E5%8C%85%EF%BC%8C%E7%94%A8%E4%BD%A0%E5%96%9C%E6%AC%A2%E7%9A%84IDE%E6%89%93%E5%BC%80%EF%BC%8C%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%A6%82%E4%B8%8B%EF%BC%9A">&nbsp;2.解压缩下载好的Gateway项目压缩包，用你喜欢的IDE打开，项目结构如下：</h3> <p><img decoding="async" alt="" height="989" src="http://img.555519.xyz/uploads3/20220828/2b51bee59d1bacbb88d9cba3dd0331b7.jpg"></p> </h1> <h2 id="Route%E7%BB%84%E6%88%90">Route组成</h2> <p>Route是网关的基本组成单元，它是由ID，目标URI和一组predicates和一组filters组成，如果一组断言结果为真，则匹配路由，目标URI会被访问。</p> <blockquote> <p><strong>注意：</strong></p> <ul> <li>多个 Predicate 之间是 逻辑and 的关系。</li> <li>多个Predicate是从定义的顺序从上到下依次执行,也可以指定 order 属性的值。</li> </ul> </blockquote> <h2 id="%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F">配置方式</h2> <p>Gateway 提供了两种不同的方式来配置路由，一种是通过yml文件来配置，另一种是通过New Bean来配置。</p> <blockquote> <p><strong>uri解析</strong></p> <ul> <li>http前缀</li> </ul> <p>&nbsp; &nbsp; &nbsp; &nbsp; 路由匹配完成后跳转到此地址</p> <ul> <li>lb前缀</li> </ul> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lb代表负载均衡，service-name代表服务注册中心该服务注册的服务名</p> </blockquote> <h3 id="%C2%A0yml%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE">&nbsp;yml文件配置</h3> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:           #路由的ID 唯一即可         - id: USER-CENTER           #路由的地址           uri:  http://localhost:8888/          #uri:  lb://service-name            predicates:             - Path=/user/**</code></pre> </div> <h3 id="%C2%A0New%20Bean%E9%85%8D%E7%BD%AE">&nbsp;New Bean配置</h3> <pre><code class="language-java">package com.example.gateway.config;  import org.springframework.cloud.gateway.route.RouteLocator; import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration;  /**  * @author Yellow Duck ????  * @date 2022-04-27 15:21  */ @Configuration public class GatewayConfig {      @Bean     public RouteLocator customRouteLocator(RouteLocatorBuilder builder) {         return builder.routes()                 //配置路由                 .route("USER-CENTER", r -&gt; r.path("/user")                         .uri("http://localhost:8888"))                 .build();     } }</code></pre> <p><strong>使用效果：</strong></p> <ul> <li>启动服务后，可以通过终端或者Postman等工具调用<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8889/user"  title="http://localhost:8889/user" rel="nofollow">http://localhost:8889/user</a></li> <li>会发现请求被路由转发到<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/user"  title="http://localhost:8888/user" rel="nofollow">http://localhost:8888/user</a></li> </ul> <div> <p><img decoding="async" alt="" height="371" src="http://img.555519.xyz/uploads3/20220828/3422f1ae7c902a8ff1c32b46e30b4ced.jpg"></p> </div> <h2 id="%E5%B8%B8%E7%94%A8%E7%9A%84%20Route%20Predicate%20Factory%E4%BB%8B%E7%BB%8D">Route Predicate Factory</h2> <h3 id="1.After">1.After</h3> <p>&nbsp;作用：请求在指定时间<span style="color:#fe2c24;">之后</span>才匹配</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:                 - After=2022-04-27T16:35:04.030+08:00[Asia/Shanghai]</code></pre> <h3 id="2.Before%C2%A0">2.Before</h3> <p>&nbsp;作用：请求在指定时间<span style="color:#fe2c24;">之前</span>才匹配</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:                 - Before=2022-04-27T16:35:04.030+08:00[Asia/Shanghai]</code></pre> <h3 id="3.Between%C2%A0">3.Between</h3> <p>作用：请求在指定时间<span style="color:#fe2c24;">区间之内</span>才匹配，</p> <p>????：第一个时间需要小于第二个时间。</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Between=2022-04-22T16:00:00.020+08:00[Asia/Shanghai],2022-04-22T16:30:00.020+08:00[Asia/Shanghai]</code></pre> <h3 id="4.Cookie%C2%A0">4.Cookie</h3> <p>作用：请求携带<span style="color:#fe2c24;">指定Cookie</span>才匹配<br /> ????：只有当请求Cookie中带有 name=yellowDuck 才可以匹配到此路由</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Cookie=name,yellowDuck</code></pre> <h3 id="5.Header%C2%A0">5.Header</h3> <p>作用：请求携带<span style="color:#fe2c24;">指定Header</span>才匹配</p> <p>????：只有当请求Header种中带有 X-User-Id:001&nbsp;才可以匹配到此路由，其中\d+为校验数字正则表达式，可以根据需要自己定制。</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Header=X-User-Id,\d+</code></pre> <h3 id="6.Host">6.Host</h3> <p>作用：请求携带<span style="color:#fe2c24;">指定Host</span>才匹配</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Host=**.yellowDuck.com</code></pre> <h3 id="7.Method%C2%A0">7.Method</h3> <p>作用：请求<span style="color:#fe2c24;">指定Mehtod请求方式</span>才匹配</p> <p>????：只有GET,POST,DELETE请求才可以访问</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Method=GET,POST,DELETE</code></pre> <h3 id="8.Path%C2%A0">8.Path</h3> <p>作用：请求<span style="color:#fe2c24;">路径</span>匹配</p> <p>????：只有包含配置的路径才可以匹配 也可以支持/duck/{color}参数形式</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Path=/duck/**</code></pre> <h3 id="9.Query%C2%A0">9.Query</h3> <p>作用：请求<span style="color:#fe2c24;">参数包含</span><span style="color:#0d0016;">才</span>匹配</p> <p>????：请求中必须有duck这个参数才可以访问</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Query=duck</code></pre> <h3 id="10.RemoteAddr%C2%A0">10.RemoteAddr</h3> <p>作用：请求的<span style="color:#fe2c24;">IP/IP段</span>一致才可以访问</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - RemoteAddr=127.0.0.1/24</code></pre> <h3 id="11.Weight%C2%A0">11.Weight</h3> <p>作用：根据<span style="color:#fe2c24;">权重</span>的分配路由到相应的请求</p> <p>????：group分组，wight权重，是一个int值，下面代表有90%的请求会分配到<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/"  title="http://localhost:8888/" rel="nofollow">http://localhost:8888/</a>有10%请求会分配到<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8887"  title="http://localhost:8887" rel="nofollow">http://localhost:8887</a></p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           predicates:             - Weight=group1,9         - id: DUCK-CENTER #路由的ID           uri: http://localhost:8887/ #匹配后路由地址           predicates:             - Weight=group2,1</code></pre> <h2>Route Filters</h2> <blockquote> <p>过滤器 Filter 将会对请求和响应进行修改处理，路由过滤器只能指定路由进行使用。</p> </blockquote> <h3>1.AddRequestParameter</h3> <p>作用：对请求<span style="color:#fe2c24;">添加参数</span></p> <p>????：如下对GET请求添加 duck=yellow 相当于 ?duck=yellow</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           filters:             - AddRequestParameter=duck,yellow           predicates:             - Method=GET</code></pre> <h3>2.StripPrefix GatewayFilter</h3> <p>作用：对<span style="color:#fe2c24;">指定数量的路径</span>进行<span style="color:#fe2c24;">删除</span>过滤</p> <p>????：比如<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/duck/yellow/big"  title="http://localhost:8888/yellow/big/duck" rel="nofollow">http://localhost:8888/yellow/big/duck</a>&nbsp;过滤前两个路径后会变成<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/duck/yellow/big"  title="http://localhost:8888/duck" rel="nofollow">http://localhost:8888/duck</a></p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           filters:             - Path=/duck/**           predicates:             - StripPrefix=2</code></pre> <h3>3.PrefixPath GatewayFilter</h3> <p>作用：对<span style="color:#fe2c24;">指定的路径</span>进行<span style="color:#fe2c24;">增加</span></p> <p>&nbsp;????：比如<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/duck/yellow/big"  title="http://localhost:8888/duck" rel="nofollow">http://localhost:8888/duck</a>&nbsp;过滤增加路径后会变成<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8888/duck/yellow/big"  title="http://localhost:8888/yellow/duck" rel="nofollow">http://localhost:8888/yellow/duck</a></p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           filters:             - Method=POST           predicates:             - PrefixPath=/yellow</code></pre> <h3>4.Hystrix GatewayFilter</h3> <p>&nbsp;1.首先需要添加Hystrix依赖，Hystrix提供了熔断和降级。</p> <pre><code>&lt;dependency&gt;     &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;     &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>2.编写服务降级的处理类</p> <pre><code class="language-java">package com.gostop.cloud.gateway.config;  import com.gostop.cloud.gateway.handle.HystrixFallbackHandler; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.http.MediaType; import org.springframework.web.reactive.function.server.RequestPredicates; import org.springframework.web.reactive.function.server.RouterFunction; import org.springframework.web.reactive.function.server.RouterFunctions;  /**  *  * @date 2022-04-28 15:02  * @author YellowDuck  */ @Configuration public class GatewayFallbackConfiguration {      @Autowired     private HystrixFallbackHandler hystrixFallbackHandler;      @Bean     public RouterFunction routerFunction() {         return RouterFunctions.route(                 RequestPredicates.GET("/defaultfallback")                         .and(RequestPredicates.accept(MediaType.TEXT_PLAIN)), hystrixFallbackHandler);     } }</code></pre> <pre><code>package com.gostop.cloud.gateway.handle;  import lombok.extern.slf4j.Slf4j; import org.springframework.cloud.gateway.support.ServerWebExchangeUtils; import org.springframework.http.HttpStatus; import org.springframework.http.MediaType; import org.springframework.stereotype.Component; import org.springframework.web.reactive.function.BodyInserters; import org.springframework.web.reactive.function.server.HandlerFunction; import org.springframework.web.reactive.function.server.ServerRequest; import org.springframework.web.reactive.function.server.ServerResponse; import reactor.core.publisher.Mono;   /**  * 覆盖异常处理  * @date 2022-04-28 15:03  * @author Yellow Duck  */ @Slf4j @Component public class HystrixFallbackHandler implements HandlerFunction&lt;ServerResponse&gt; {      @Override     public Mono&lt;ServerResponse&gt; handle(ServerRequest serverRequest) {         serverRequest.attribute(ServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR)                 .ifPresent(originalUrls -&gt; log.error("=====网关执行请求:{}失败,服务降级处理=====", originalUrls));          return ServerResponse                 .status(HttpStatus.INTERNAL_SERVER_ERROR)                 .contentType(MediaType.APPLICATION_JSON_UTF8)                 .body(BodyInserters.fromValue("网络繁忙！"));     } }</code></pre> <p>作用：提供了熔断和降级功能</p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           filters:             - name: Hystrix               args:                 name: fallback                 fallbackUri: forward:/defaultfallback           predicates:             - Method=GET</code></pre> <h3>5.RequestRateLimiter GatewayFilter</h3> <p>引入Redis限流</p> <pre><code>&lt;dependency&gt;     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;     &lt;artifactId&gt;spring-boot-starter-data-redis-reactive&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>作用：用于<span style="color:#fe2c24;">限流</span></p> <pre><code>#GateWay项目端口号 server:   port: 8889 spring:   cloud:     gateway:       routes:         - id: USER-CENTER #路由的ID           uri:  http://localhost:8888/ #匹配后路由地址           filters:             - name: RequestRateLimiter               args:                 #每秒允许处理的请求数量                 redis-rate-limiter.replenishRate: 10                  #每秒最大处理的请求数量                 redis-rate-limiter.burstCapacity: 20                  redis-rate-limiter.requestedTokens: 1           predicates:             - Method=GET,POST</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-32434.htm">python sqlist3 sql语句中的‘?‘ 与 ‘%s‘提交数据</a></p>
                                        <p>下一个：<a href="/news/article-32921.htm">微信上买狗被欺骗怎么办（微信买狗被骗一千五百块钱法院会受理吗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-node-subscribe.htm" title="Mihomo Party节点订阅每天更新22.7M/S免费节点订阅链接">Mihomo Party节点订阅每天更新22.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22164.htm" title="宠物店一般一年能赚多少钱（宠物店一般一个月营业额多少）">宠物店一般一年能赚多少钱（宠物店一般一个月营业额多少）</a></li>
                        <li class="py-2"><a href="/news/article-32436.htm" title="SpringCloud Gateway详解与配置">SpringCloud Gateway详解与配置</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-30-free-subscribe-node.htm" title="Mihomo Party节点订阅每天更新20M/S免费节点订阅链接地址分享">Mihomo Party节点订阅每天更新20M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-node-share-links.htm" title="Mihomo Party节点订阅每天更新20.9M/S免费节点订阅链接">Mihomo Party节点订阅每天更新20.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-19880.htm" title="动物打疫苗有什么作用吗（动物打的疫苗是什么）">动物打疫苗有什么作用吗（动物打的疫苗是什么）</a></li>
                        <li class="py-2"><a href="/news/article-20796.htm" title="Spring JDBC-NamedParameterJdbcTemplate模板类">Spring JDBC-NamedParameterJdbcTemplate模板类</a></li>
                        <li class="py-2"><a href="/news/article-27718.htm" title="家用小型狗粮机器价格及图片（小型犬狗粮制作方法）">家用小型狗粮机器价格及图片（小型犬狗粮制作方法）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-5-node-share.htm" title="Mihomo Party节点订阅每天更新20.2M/S免费节点订阅链接">Mihomo Party节点订阅每天更新20.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-node-subscribe.htm" title="Mihomo Party节点订阅每天更新18.9M/S免费节点订阅链接">Mihomo Party节点订阅每天更新18.9M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div><!-- .row end -->
        </div><!-- .container end -->
    </section>
    <!--Recent Work End -->
        <!-- Footer Section Start -->
    <section class="footer-bg clear animation" data-animation="animation-fade-in-up" id="footer">
        <!-- Footer Bottom Start-->
        <div class="footer-bottom clear">
            <div class="container">
                <div class="row">
                    <div class="col-sm-6">
                        <ul class="footer-nav pull-left">
                            <li><a href="/">Home</a></li>
                            <li><a href="#">Features</a></li>
                            <li><a href="#">Portfolio</a></li>
                            <li><a href="#">Blog</a></li>
                            <li><a href="#">Contact</a></li>
                            <li><a href="#">Purchase</a></li>
                        </ul>
                    </div><!-- col 6 end -->
                    <div class="col-sm-6">
                        <p class="copywrite pull-right">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Mihomo Party免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div><!-- col 6 end -->
                </div><!-- row end -->
            </div><!-- container end -->
        </div><!-- Footer Bottom End -->
    </section><!-- footer section end  -->
    <div class="go-up"><img src="/assets/website/img/mihomoparty/back-top.png" alt="Back-To-Top"></div>
    <!-- Back To Top End-->
    <!-- Jquery lib-->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/bootstrap.js"></script>
    <!-- JavaScript -->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/owl.carousel.min.js"></script>
    <!--for portfolio jquery-->
    <script src="/assets/website/js/frontend/mihomoparty/jquery.isotope.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/jquery.ui.widget.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/jquery.ui.rlightbox.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/jquery.themepunch.tools.min.js"></script>
    <script src="/assets/website/js/frontend/mihomoparty/jquery.themepunch.revolution.min.js"></script>
    <script type="text/javascript">
        $(function(){
            $('.banner').revolution({
            dottedOverlay: "none",
            delay: 9000,
            startwidth: 1500,
            startheight: 700,
            hideThumbs: 200,

            thumbWidth: 100,
            thumbHeight: 50,
            thumbAmount: 5,

            navigationType: "bullet",
            navigationArrows: "solo",
            navigationStyle: "preview3",


            navigationHAlign: "center", // Vertical Align top,center,bottom
            navigationVAlign: "bottom", // Horizontal Align left,center,right
            navigationHOffset: 0,
            navigationVOffset: 20,

            soloArrowLeftHalign: "left",
            soloArrowLeftValign: "center",
            soloArrowLeftHOffset: 20,
            soloArrowLeftVOffset: 0,

            soloArrowRightHalign: "right",
            soloArrowRightValign: "center",
            soloArrowRightHOffset: 20,
            soloArrowRightVOffset: 0,

            touchenabled: "off", // Enable Swipe Function : on/off
            onHoverStop: "off", // Stop Banner Timet at Hover on Slide on/off

            stopAtSlide: -1, // Stop Timer if Slide "x" has been Reached. If stopAfterLoops set to 0, then it stops already in the first Loop at slide X which defined. -1 means do not stop at any slide. stopAfterLoops has no sinn in this case.
            stopAfterLoops: -1, // Stop Timer if All slides has been played "x" times. IT will stop at THe slide which is defined via stopAtSlide:x, if set to -1 slide never stop automatic

            hideCaptionAtLimit: 0, // It Defines if a caption should be shown under a Screen Resolution ( Basod on The Width of Browser)
            hideAllCaptionAtLilmit: 0, // Hide all The Captions if Width of Browser is less then this value
            hideSliderAtLimit: 0, // Hide the whole slider, and stop also functions if Width of Browser is less than this value

            shadow: 0, //0 = no Shadow, 1,2,3 = 3 Different Art of Shadows  (No Shadow in Fullwidth Version !)
            fullWidth: "on" // Turns On or Off the Fullwidth Image Centering in FullWidth Modus


        });
        })
    </script>
    
    <!--Main Js -->
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/nice-scroll.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/ms-drop-down.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/easy-tabs.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/styleswitch.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/mihomoparty/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>